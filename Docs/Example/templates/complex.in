	#
	# Note that most of the comments here were taken from sample
	# input files that came with APBS.  You can find APBS at
	# http://agave.wustl.edu/apbs/
	# Note that APBS is GPL'd code.
	#
	read
	    mol pqr ++!!file1!!++       # read molecule 1 CD4
	    mol pqr ++!!file2!!++       # read molecule 2 bound GP120
	    mol pqr ++!!file3!!++      # read unbound g chain unbound GP120 
	    mol pqr ++!!file4!!++       # read complex 
	end
	
	#CALCULATE POTENTIAL FOR MOLECULE 1
	elec name cd4
	    mg-auto
	    dime    ++!!var0!!++  # number of find grid points
	                     # calculated by psize.py
	    cglen    ++!!var1!!++  # coarse mesh lengths (A)
	    fglen    ++!!var2!!++  # fine mesh lengths (A)
	                     # calculated by psize.py
	    cgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    fgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    npbe               # solve the full nonlinear PBE with npbe
	    #lpbe            # solve the linear PBE with lpbe
	    bcfl mdh          # Boundary condition flag
	                     #  0 => Zero
	                     #  1 => Single DH sphere
	                     #  2 => Multiple DH spheres
	                     #  4 => Focusing
	                     #
	    #ion 1 0.000 2.0 # Counterion declaration:
	    ion charge  1 conc ++!!PCONC!!++ radius 2.000000     # Counterion declaration:
	    ion charge -1 conc ++!!NCONC!!++ radius 1.800000     # ion <charge> <conc (M)> <radius>
	    ion charge  2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    ion charge -2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    pdie 2.000000          # Solute dielectric
	    sdie 78.000000          # Solvent dielectric
	    chgm spl2          # Charge disc method
	                     # 0 is linear splines
	                     # 1 is cubic b-splines
	    mol 1            # which molecule to use
	    srfm smol        # Surface calculation method
	                     #  0 => Mol surface for epsilon;
	                     #       inflated VdW for kappa; no
	                     #       smoothing
	                     #  1 => As 0 with harmoinc average
	                     #       smoothing
	                     #  2 => Cubic spline 
	    srad 1.400000          # Solvent radius (1.4 for water)
	    swin 0.3         # Surface cubic spline window .. default 0.3
	    temp 310.000000          # System temperature (298.15 default)
	    sdens 10.000000         # Specify the number of grid points per square-angstrom to use in Vacc object. Ignored when srad is 0.0 (see srad) or srfm is spl2 (see srfm). There is a direct correlation between the value used for the Vacc sphere density, the accuracy of the Vacc object, and the APBS calculation time. APBS default value is 10.0.
	    #gamma 0.105      # Surface tension parameter for apolar forces (in kJ/mol/A^2)
       	              # only used for force calculations, so we don't care, but
	                     # it *used to be* always required, and 0.105 is the default
	    calcenergy comps # Energy I/O to stdout
	                     #  0 => don't write out energy
	                     #  1 => write out total energy
	                     #  2 => write out total energy and all
	                     #       components
	    calcforce no     # Atomic forces I/O (to stdout)
	                     #  0 => don't write out forces
	                     #  1 => write out net forces on molecule
	                     #  2 => write out atom-level forces
	 write pot dx ++!!m1_DXout!!++ # What to write .. this says write the potential in dx
	                     # format to a file.
	end
	
	# CALCULATE POTENTIAL FOR MOLECULE 2
	elec name gp120
	    mg-auto
	    dime    ++!!var0!!++  # number of find grid points
	                     # calculated by psize.py
	    cglen    ++!!var1!!++  # coarse mesh lengths (A)
	    fglen    ++!!var2!!++  # fine mesh lengths (A)
	                     # calculated by psize.py
	    cgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    fgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    npbe               # solve the full nonlinear PBE with npbe
	    #lpbe            # solve the linear PBE with lpbe
	    bcfl mdh          # Boundary condition flag
	                     #  0 => Zero
	                     #  1 => Single DH sphere
	                     #  2 => Multiple DH spheres
	                     #  4 => Focusing
	                     #
	    #ion 1 0.000 2.0 # Counterion declaration:
	    ion charge  1 conc ++!!PCONC!!++ radius 2.000000     # Counterion declaration:
	    ion charge -1 conc ++!!NCONC!!++ radius 1.800000     # ion <charge> <conc (M)> <radius>
	    ion charge  2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    ion charge -2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    pdie 2.000000          # Solute dielectric
	    sdie 78.000000          # Solvent dielectric
	    chgm spl2          # Charge disc method
	                     # 0 is linear splines
	                     # 1 is cubic b-splines
	    mol 2            # which molecule to use
	    srfm smol        # Surface calculation method
	                     #  0 => Mol surface for epsilon;
	                     #       inflated VdW for kappa; no
	                     #       smoothing
	                     #  1 => As 0 with harmoinc average
	                     #       smoothing
	                     #  2 => Cubic spline 
	    srad 1.400000          # Solvent radius (1.4 for water)
	    swin 0.3         # Surface cubic spline window .. default 0.3
	    temp 310.000000          # System temperature (298.15 default)
	    sdens 10.000000         # Specify the number of grid points per square-angstrom to use in Vacc object. Ignored when srad is 0.0 (see srad) or srfm is spl2 (see srfm). There is a direct correlation between the value used for the Vacc sphere density, the accuracy of the Vacc object, and the APBS calculation time. APBS default value is 10.0.
	    #gamma 0.105      # Surface tension parameter for apolar forces (in kJ/mol/A^2)
	                     # only used for force calculations, so we don't care, but
	                     # it *used to be* always required, and 0.105 is the default
	    calcenergy comps # Energy I/O to stdout
	                     #  0 => don't write out energy
	                     #  1 => write out total energy
	                     #  2 => write out total energy and all
	                     #       components
	    calcforce no     # Atomic forces I/O (to stdout)
	                     #  0 => don't write out forces
	                     #  1 => write out net forces on molecule
	                     #  2 => write out atom-level forces
	 write pot dx ++!!m2_DXout!!++ # What to write .. this says write the potential in dx

	                     # format to a file.
	end
	
	# Calculate POTENTIAL FOR unbound G chain 
	elec name ubgp120
	    mg-auto
	    dime    ++!!var0!!++  # number of find grid points
	                     # calculated by psize.py
	    cglen    ++!!var1!!++  # coarse mesh lengths (A)
	    fglen    ++!!var2!!++  # fine mesh lengths (A)
	                     # calculated by psize.py
	    cgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    fgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    npbe               # solve the full nonlinear PBE with npbe
	    #lpbe            # solve the linear PBE with lpbe
	    bcfl mdh          # Boundary condition flag
	                     #  0 => Zero
	                     #  1 => Single DH sphere
	                     #  2 => Multiple DH spheres
	                     #  4 => Focusing
	                     #
	    #ion 1 0.000 2.0 # Counterion declaration:
	    ion charge  1 conc ++!!PCONC!!++ radius 2.000000     # Counterion declaration:
	    ion charge -1 conc ++!!NCONC!!++ radius 1.800000     # ion <charge> <conc (M)> <radius>
	    ion charge  2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    ion charge -2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    pdie 2.000000          # Solute dielectric
	    sdie 78.000000          # Solvent dielectric
	    chgm spl2          # Charge disc method
	                     # 0 is linear splines
	                     # 1 is cubic b-splines
	    mol 3 	     # which molecule to use
	    srfm smol        # Surface calculation method
	                     #  0 => Mol surface for epsilon;
	                     #       inflated VdW for kappa; no
	                     #       smoothing
	                     #  1 => As 0 with harmoinc average
	                     #       smoothing
		                     #  2 => Cubic spline 
	    srad 1.400000          # Solvent radius (1.4 for water)
	    swin 0.3         # Surface cubic spline window .. default 0.3
	    temp 310.000000          # System temperature (298.15 default)
	    sdens 10.000000         # Specify the number of grid points per square-angstrom to use in Vacc object. Ignored when srad is 0.0 (see srad) or srfm is spl2 (see srfm). There is a direct correlation between the value used for the Vacc sphere density, the accuracy of the Vacc object, and the APBS calculation time. APBS default value is 10.0.
	    #gamma 0.105      # Surface tension parameter for apolar forces (in kJ/mol/A^2)
	                     # only used for force calculations, so we don't care, but
	                     # it *used to be* always required, and 0.105 is the default
	    calcenergy comps # Energy I/O to stdout
	                     #  0 => don't write out energy
	                     #  1 => write out total energy
	                     #  2 => write out total energy and all
	                     #       components
	    calcforce no     # Atomic forces I/O (to stdout)
	                     #  0 => don't write out forces
	                     #  1 => write out net forces on molecule
	                     #  2 => write out atom-level forces
	 write pot dx ++!!m3_DXout!!++ # What to write .. this says write the potential in dx
	                     # format to a file.
	end
	
	# Calculate POTENTIAL FOR COMPLEX
	elec name complex
	    mg-auto
	    dime    ++!!var0!!++  # number of find grid points
	                     # calculated by psize.py
	    cglen    ++!!var1!!++  # coarse mesh lengths (A)
	    fglen    ++!!var2!!++  # fine mesh lengths (A)
	                     # calculated by psize.py
	    cgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    fgcent  ++!!var3!!++   # (could also give (x,y,z) form psize.py) #known center
	    npbe               # solve the full nonlinear PBE with npbe
	    #lpbe            # solve the linear PBE with lpbe
	    bcfl mdh          # Boundary condition flag
	                     #  0 => Zero
	                     #  1 => Single DH sphere
	                     #  2 => Multiple DH spheres
	                     #  4 => Focusing
	                     #
	    #ion 1 0.000 2.0 # Counterion declaration:
	    ion charge  1 conc ++!!PCONC!!++ radius 2.000000     # Counterion declaration:
	    ion charge -1 conc ++!!NCONC!!++ radius 1.800000     # ion <charge> <conc (M)> <radius>
	    ion charge  2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    ion charge -2 conc 0.000000 radius 2.000000     # ion <charge> <conc (M)> <radius>
	    pdie 2.000000          # Solute dielectric
	    sdie 78.000000          # Solvent dielectric
	    chgm spl2          # Charge disc method
	                     # 0 is linear splines
	                     # 1 is cubic b-splines
	    mol 4 	     # which molecule to use
	    srfm smol        # Surface calculation method
	                     #  0 => Mol surface for epsilon;
	                     #       inflated VdW for kappa; no
	                     #       smoothing
	                     #  1 => As 0 with harmoinc average
	                     #       smoothing
		                     #  2 => Cubic spline 
	    srad 1.400000          # Solvent radius (1.4 for water)
	    swin 0.3         # Surface cubic spline window .. default 0.3
	    temp 310.000000          # System temperature (298.15 default)
	    sdens 10.000000         # Specify the number of grid points per square-angstrom to use in Vacc object. Ignored when srad is 0.0 (see srad) or srfm is spl2 (see srfm). There is a direct correlation between the value used for the Vacc sphere density, the accuracy of the Vacc object, and the APBS calculation time. APBS default value is 10.0.
	    #gamma 0.105      # Surface tension parameter for apolar forces (in kJ/mol/A^2)
	                     # only used for force calculations, so we don't care, but
	                     # it *used to be* always required, and 0.105 is the default
	    calcenergy comps # Energy I/O to stdout
	                     #  0 => don't write out energy
	                     #  1 => write out total energy
	                     #  2 => write out total energy and all
	                     #       components
	    calcforce no     # Atomic forces I/O (to stdout)
	                     #  0 => don't write out forces
	                     #  1 => write out net forces on molecule
	                     #  2 => write out atom-level forces
	 write pot dx ++!!m4_DXout!!++ # What to write .. this says write the potential in dx
	                     # format to a file.
	end
	# COMBINE TO GIVE BINDING ENERGY
	print elecEnergy complex end	
	print elecEnergy gp120 end
	print elecEnergy cd4 end
	print elecEnergy ubgp120 end
	print elecEnergy complex - gp120 - cd4 end
	print elecEnergy complex - ubgp120 - cd4 end
	quit
